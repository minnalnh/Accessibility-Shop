{"ast":null,"code":"var _jsxFileName = \"/Users/minnahedell/Documents/GitHub/Accessibility-Shop/praktik/src/components/CartContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [counters, setCounters] = useState({});\n  const addToCart = item => {\n    const isItemInCart = cartItems.some(cartItem => cartItem.id === item.id);\n    if (counters[item.id]) {\n      // If it exists, increment the counter for that item\n      setCounters(prevCounters => ({\n        ...prevCounters,\n        [item.id]: prevCounters[item.id] + 1\n      }));\n    } else {\n      // If it doesn't exist, create a new counter for that item\n      setCounters(prevCounters => ({\n        ...prevCounters,\n        [item.id]: 1\n      }));\n      setCartItems(prevItems => [...prevItems, item]);\n    }\n    if (!isItemInCart) {\n      setCartItems(prevItems => [...prevItems, item]);\n      //setCounter((prevCounter => prevCounter + 1));\n    } else {\n      console.log(`Item with id ${item.id} is already in the cart`);\n      //setCounter((prevCounter => prevCounter + 1));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      setCartItems,\n      addToCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"nW02AS6VyC52xhIvk4IE5pngKiU=\");\n_c = CartProvider;\nexport { CartProvider, CartContext };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","counters","setCounters","addToCart","item","isItemInCart","some","cartItem","id","prevCounters","prevItems","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/minnahedell/Documents/GitHub/Accessibility-Shop/praktik/src/components/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\nconst CartContext = createContext();\n\nconst CartProvider = ({ children }) => {\n    const [cartItems, setCartItems] = useState([]);\n    const [counters, setCounters] = useState({});\n\n    const addToCart = (item) => {\n        const isItemInCart = cartItems.some(cartItem => cartItem.id === item.id);\n\n        if (counters[item.id]) {\n            // If it exists, increment the counter for that item\n            setCounters((prevCounters) => ({\n                ...prevCounters,\n                [item.id]: prevCounters[item.id] + 1,\n            }));\n        } else {\n            // If it doesn't exist, create a new counter for that item\n            setCounters((prevCounters) => ({\n                ...prevCounters,\n                [item.id]: 1,\n            }));\n            setCartItems((prevItems) => [...prevItems, item]);\n        }\n\n        if (!isItemInCart) {\n            setCartItems((prevItems) => [...prevItems, item]);\n            //setCounter((prevCounter => prevCounter + 1));\n\n        } else {\n            console.log(`Item with id ${item.id} is already in the cart`);\n            //setCounter((prevCounter => prevCounter + 1));\n        }\n\n    };\n\n    return (\n        <CartContext.Provider value={{ cartItems, setCartItems, addToCart }}>\n            {children}\n        </CartContext.Provider>\n    );\n};\n\nexport { CartProvider, CartContext };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAEnC,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5C,MAAMW,SAAS,GAAIC,IAAI,IAAK;IACxB,MAAMC,YAAY,GAAGN,SAAS,CAACO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,CAAC;IAExE,IAAIP,QAAQ,CAACG,IAAI,CAACI,EAAE,CAAC,EAAE;MACnB;MACAN,WAAW,CAAEO,YAAY,KAAM;QAC3B,GAAGA,YAAY;QACf,CAACL,IAAI,CAACI,EAAE,GAAGC,YAAY,CAACL,IAAI,CAACI,EAAE,CAAC,GAAG;MACvC,CAAC,CAAC,CAAC;IACP,CAAC,MAAM;MACH;MACAN,WAAW,CAAEO,YAAY,KAAM;QAC3B,GAAGA,YAAY;QACf,CAACL,IAAI,CAACI,EAAE,GAAG;MACf,CAAC,CAAC,CAAC;MACHR,YAAY,CAAEU,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEN,IAAI,CAAC,CAAC;IACrD;IAEA,IAAI,CAACC,YAAY,EAAE;MACfL,YAAY,CAAEU,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEN,IAAI,CAAC,CAAC;MACjD;IAEJ,CAAC,MAAM;MACHO,OAAO,CAACC,GAAG,CAAE,gBAAeR,IAAI,CAACI,EAAG,yBAAwB,CAAC;MAC7D;IACJ;EAEJ,CAAC;;EAED,oBACId,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,SAAS;MAAEC,YAAY;MAAEG;IAAU,CAAE;IAAAN,QAAA,EAC/DA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACpB,EAAA,CAtCIF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAwClB,SAASA,YAAY,EAAED,WAAW;AAAG,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}