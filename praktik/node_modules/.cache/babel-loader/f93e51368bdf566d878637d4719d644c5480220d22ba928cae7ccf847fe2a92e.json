{"ast":null,"code":"var _jsxFileName = \"/Users/minnahedell/Documents/GitHub/Accessibility-Shop/praktik/src/components/CartContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [counters, setCounters] = useState({});\n  const addToCart = item => {\n    const isItemInCart = cartItems.some(cartItem => cartItem.id === item.id);\n    if (!isItemInCart) {\n      setCartItems(prevItems => [...prevItems, item]);\n      setCounters(prevCounters => ({\n        ...prevCounters,\n        [item.id]: (prevCounters[item.id] || 0) + 1\n      }));\n    } else {\n      setCounters(prevCounters => ({\n        ...prevCounters,\n        [item.id]: (prevCounters[item.id] || 0) + 1\n      }));\n      console.log(`Item with id ${item.id} is already in the cart`);\n    }\n  };\n  const removeItem = index => {\n    const currentCartItems = [...cartItems];\n    const removedItem = currentCartItems[index];\n    if (counters[removedItem.id] > 1) {\n      setCounters(prevCounters => ({\n        ...prevCounters,\n        [removedItem.id]: prevCounters[removedItem.id] - 1\n      }));\n    } else {\n      setCounters(prevCounters => {\n        const {\n          [removedItem.id]: _,\n          ...rest\n        } = prevCounters;\n        return rest;\n      });\n    }\n    currentCartItems.splice(index, 1);\n    setCartItems(currentCartItems);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      setCartItems,\n      counters,\n      setCounters,\n      addToCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"nW02AS6VyC52xhIvk4IE5pngKiU=\");\n_c = CartProvider;\nexport { CartProvider, CartContext };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","counters","setCounters","addToCart","item","isItemInCart","some","cartItem","id","prevItems","prevCounters","console","log","removeItem","index","currentCartItems","removedItem","_","rest","splice","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/minnahedell/Documents/GitHub/Accessibility-Shop/praktik/src/components/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\nconst CartContext = createContext();\n\nconst CartProvider = ({ children }) => {\n    const [cartItems, setCartItems] = useState([]);\n    const [counters, setCounters] = useState({});\n\n    const addToCart = (item) => {\n        const isItemInCart = cartItems.some(cartItem => cartItem.id === item.id);\n        \n        if (!isItemInCart) {\n            setCartItems((prevItems) => [...prevItems, item]);\n            setCounters((prevCounters) => ({...prevCounters, [item.id]: (prevCounters[item.id] || 0) + 1}));\n\n        } else {\n            setCounters((prevCounters) => ({...prevCounters, [item.id]: (prevCounters[item.id] || 0) + 1}));\n            console.log(`Item with id ${item.id} is already in the cart`);\n        }\n    };\n\n    const removeItem = (index) => {\n        const currentCartItems = [...cartItems];\n        const removedItem = currentCartItems[index];\n\n        if(counters[removedItem.id] > 1) {\n            setCounters((prevCounters) => ({\n                ...prevCounters,\n                [removedItem.id]: prevCounters[removedItem.id] - 1,\n            }));\n        } else {\n            setCounters((prevCounters) => {\n                const { [removedItem.id]: _, ...rest } = prevCounters;\n                return rest;\n            });\n        }\n\n        currentCartItems.splice(index, 1);\n        setCartItems(currentCartItems);\n    }\n\n    return (\n        <CartContext.Provider value={{ cartItems, setCartItems, counters, setCounters, addToCart }}>\n            {children}\n        </CartContext.Provider>\n    );\n};\n\nexport { CartProvider, CartContext };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAEnC,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5C,MAAMW,SAAS,GAAIC,IAAI,IAAK;IACxB,MAAMC,YAAY,GAAGN,SAAS,CAACO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,CAAC;IAExE,IAAI,CAACH,YAAY,EAAE;MACfL,YAAY,CAAES,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEL,IAAI,CAAC,CAAC;MACjDF,WAAW,CAAEQ,YAAY,KAAM;QAAC,GAAGA,YAAY;QAAE,CAACN,IAAI,CAACI,EAAE,GAAG,CAACE,YAAY,CAACN,IAAI,CAACI,EAAE,CAAC,IAAI,CAAC,IAAI;MAAC,CAAC,CAAC,CAAC;IAEnG,CAAC,MAAM;MACHN,WAAW,CAAEQ,YAAY,KAAM;QAAC,GAAGA,YAAY;QAAE,CAACN,IAAI,CAACI,EAAE,GAAG,CAACE,YAAY,CAACN,IAAI,CAACI,EAAE,CAAC,IAAI,CAAC,IAAI;MAAC,CAAC,CAAC,CAAC;MAC/FG,OAAO,CAACC,GAAG,CAAE,gBAAeR,IAAI,CAACI,EAAG,yBAAwB,CAAC;IACjE;EACJ,CAAC;EAED,MAAMK,UAAU,GAAIC,KAAK,IAAK;IAC1B,MAAMC,gBAAgB,GAAG,CAAC,GAAGhB,SAAS,CAAC;IACvC,MAAMiB,WAAW,GAAGD,gBAAgB,CAACD,KAAK,CAAC;IAE3C,IAAGb,QAAQ,CAACe,WAAW,CAACR,EAAE,CAAC,GAAG,CAAC,EAAE;MAC7BN,WAAW,CAAEQ,YAAY,KAAM;QAC3B,GAAGA,YAAY;QACf,CAACM,WAAW,CAACR,EAAE,GAAGE,YAAY,CAACM,WAAW,CAACR,EAAE,CAAC,GAAG;MACrD,CAAC,CAAC,CAAC;IACP,CAAC,MAAM;MACHN,WAAW,CAAEQ,YAAY,IAAK;QAC1B,MAAM;UAAE,CAACM,WAAW,CAACR,EAAE,GAAGS,CAAC;UAAE,GAAGC;QAAK,CAAC,GAAGR,YAAY;QACrD,OAAOQ,IAAI;MACf,CAAC,CAAC;IACN;IAEAH,gBAAgB,CAACI,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;IACjCd,YAAY,CAACe,gBAAgB,CAAC;EAClC,CAAC;EAED,oBACIrB,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,SAAS;MAAEC,YAAY;MAAEC,QAAQ;MAAEC,WAAW;MAAEC;IAAU,CAAE;IAAAN,QAAA,EACtFA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC3B,EAAA,CA1CIF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AA4ClB,SAASA,YAAY,EAAED,WAAW;AAAG,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}