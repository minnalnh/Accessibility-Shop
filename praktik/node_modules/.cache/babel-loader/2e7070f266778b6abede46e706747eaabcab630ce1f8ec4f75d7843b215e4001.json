{"ast":null,"code":"var _jsxFileName = \"/Users/minnahedell/Documents/GitHub/Accessibility-Shop/praktik/src/components/CartContext.jsx\",\n  _s = $RefreshSig$();\n// CartContext.js\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const addToCart = item => {\n    const existingItemIndex = cartItems.findIndex(cartItem => cartItem.id === item.id);\n    if (existingItemIndex !== -1) {\n      // If the item with the same ID already exists, update the quantity or handle it as needed\n      const updatedCartItems = [...cartItems];\n      updatedCartItems[existingItemIndex].quantity += 1;\n      setCartItems(updatedCartItems);\n    } else {\n      // If the item with the given ID doesn't exist, add it to the cart\n      setCartItems(prevCartItems => [...prevCartItems, {\n        ...item,\n        quantity: 1\n      }]);\n    }\n  };\n  const removeFromCart = itemId => {\n    // Implement the logic to remove the item from the cart based on its ID\n    // ...\n  };\n  const clearCart = () => {\n    // Implement the logic to clear the entire cart\n    // ...\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nexport { CartProvider, CartContext };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","addToCart","item","existingItemIndex","findIndex","cartItem","id","updatedCartItems","quantity","prevCartItems","removeFromCart","itemId","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/minnahedell/Documents/GitHub/Accessibility-Shop/praktik/src/components/CartContext.jsx"],"sourcesContent":["// CartContext.js\nimport React, { createContext, useState } from 'react';\n\nconst CartContext = createContext();\n\nconst CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n\n  const addToCart = (item) => {\n    const existingItemIndex = cartItems.findIndex((cartItem) => cartItem.id === item.id);\n\n    if (existingItemIndex !== -1) {\n      // If the item with the same ID already exists, update the quantity or handle it as needed\n      const updatedCartItems = [...cartItems];\n      updatedCartItems[existingItemIndex].quantity += 1;\n      setCartItems(updatedCartItems);\n    } else {\n      // If the item with the given ID doesn't exist, add it to the cart\n      setCartItems((prevCartItems) => [...prevCartItems, { ...item, quantity: 1 }]);\n    }\n  };\n\n  const removeFromCart = (itemId) => {\n    // Implement the logic to remove the item from the cart based on its ID\n    // ...\n  };\n\n  const clearCart = () => {\n    // Implement the logic to clear the entire cart\n    // ...\n  };\n\n  return (\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart, clearCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport { CartProvider, CartContext };\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAEnC,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMS,SAAS,GAAIC,IAAI,IAAK;IAC1B,MAAMC,iBAAiB,GAAGJ,SAAS,CAACK,SAAS,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,CAAC;IAEpF,IAAIH,iBAAiB,KAAK,CAAC,CAAC,EAAE;MAC5B;MACA,MAAMI,gBAAgB,GAAG,CAAC,GAAGR,SAAS,CAAC;MACvCQ,gBAAgB,CAACJ,iBAAiB,CAAC,CAACK,QAAQ,IAAI,CAAC;MACjDR,YAAY,CAACO,gBAAgB,CAAC;IAChC,CAAC,MAAM;MACL;MACAP,YAAY,CAAES,aAAa,IAAK,CAAC,GAAGA,aAAa,EAAE;QAAE,GAAGP,IAAI;QAAEM,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC;IAC/E;EACF,CAAC;EAED,MAAME,cAAc,GAAIC,MAAM,IAAK;IACjC;IACA;EAAA,CACD;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB;IACA;EAAA,CACD;EAED,oBACElB,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,SAAS;MAAEE,SAAS;MAAES,cAAc;MAAEE;IAAU,CAAE;IAAAf,QAAA,EAC9EA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACpB,EAAA,CAhCIF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAkClB,SAASA,YAAY,EAAED,WAAW;AAAG,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}